apiVersion: v1
kind: Namespace
metadata:
  name: roboshop
  labels:
    name :  roboshop

---

apiVersion : rbac.authorization.k8s.io/v1
kind : Role
metadata :
  namespace: roboshop
  name: roboshop-admin-role
rules :
- apiGroups: ["*"] # "" indicates the core API group
  resources: ["*"]
  verbs: ["*"]

---

apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: roboshop-admin-rolebinding
  namespace: roboshop
subjects:
# You can specify more than one "subject"
- kind: User
  name: roboshop-admin
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: roboshop-admin-role # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata: 
  name: cluster-reader
rules:
- apiGroups: [*]
  resources: ["nodes","namespaces","deployments","services"]
  verbs: ["get","watch","list"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: CLusterRoleBinding
metadata:
  name: cluster-reader-role-binding
  namespace: roboshop
subjects:
# You can specify more than one "subject"
- kind: User
  name: roboshop-admin
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: ClusterRole #this must be Role or ClusterRole
  name: cluster-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io